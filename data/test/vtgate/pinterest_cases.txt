# Force scatter directive. In select_cases.txt this test results in a SelectEqualUnique plan without the FORCE_SCATTER
"select /*vt+ FORCE_SCATTER=1 */ * from user where name ='abc' AND (id = 4) limit 5"
{
  "Original": "select /*vt+ FORCE_SCATTER=1 */ * from user where name ='abc' AND (id = 4) limit 5",
  "Instructions": {
    "Opcode":"Limit",
    "Count":5,
    "Offset":null,
    "Input":{
      "Opcode": "SelectScatter",
      "Keyspace": {
        "Name": "user",
        "Sharded": true
      },
    "Query": "select /*vt+ FORCE_SCATTER=1 */ * from user where name = 'abc' and (id = 4) limit :__upper_limit",
    "FieldQuery": "select * from user where 1 != 1"
    }
  }
}


# Simple scatter_cache
"select * from campaigns where id = 7"
{
  "Original": "select * from campaigns where id = 7",
  "Instructions": {
    "Opcode": "SelectEqualUnique",
    "Keyspace": {
      "Name": "user",
      "Sharded": true
    },
    "Query": "select * from campaigns where id = 7",
    "FieldQuery": "select * from campaigns where 1 != 1",
    "Vindex": "campaign_idx",
    "Values": [
      7
    ]
  }
}


# Prefer hash vindex over scatter cache
"select * from campaigns where advertiser_id = 6 and id = 7"
{
  "Original": "select * from campaigns where advertiser_id = 6 and id = 7",
  "Instructions": {
    "Opcode": "SelectEqualUnique",
    "Keyspace": {
      "Name": "user",
      "Sharded": true
    },
    "Query": "select * from campaigns where advertiser_id = 6 and id = 7",
    "FieldQuery": "select * from campaigns where 1 != 1",
    "Vindex": "advertiser_idx",
    "Values": [6]
  }
}


# -merge_keyspace_joins_to_single_shard works even if the join column has no vindex
"select cpn.id, ad.id from campaigns cpn join advertisers ad on cpn.fake_col = ad.fake_col"
{
  "Original": "select cpn.id, ad.id from campaigns cpn join advertisers ad on cpn.fake_col = ad.fake_col",
  "Instructions": {
    "Opcode": "SelectScatter",
    "Keyspace": {
      "Name": "user",
      "Sharded": true
    },
    "Query": "select cpn.id, ad.id from campaigns as cpn join advertisers as ad on cpn.fake_col = ad.fake_col",
    "FieldQuery": "select cpn.id, ad.id from campaigns as cpn join advertisers as ad on cpn.fake_col = ad.fake_col where 1 != 1"
  }
}


# Insert with value that's in a scatter-cache vindex column
"insert into campaigns(id, advertiser_id) values(1, 2)"
{
  "Original": "insert into campaigns(id, advertiser_id) values(1, 2)",
  "Instructions": {
    "Opcode": "InsertSharded",
    "Keyspace": {
      "Name": "user",
      "Sharded": true
    },
    "Query": "insert into campaigns(id, advertiser_id) values (:_id0, :_advertiser_id0)",
    "Values": [
      [[2]],
      [[1]]
    ],
    "Table": "campaigns",
    "Prefix": "insert into campaigns(id, advertiser_id) values ",
    "Mid": [
      "(:_id0, :_advertiser_id0)"
    ]
  }
}

# Insert omitting billing profile ID, which has a scatter-cache vindex column
"insert into advertisers(id) values(1)"
{
  "Original": "insert into advertisers(id) values(1)",
  "Instructions": {
    "Opcode": "InsertSharded",
    "Keyspace": {
      "Name": "user",
      "Sharded": true
    },
    "Query": "insert into advertisers(id, billing_profile_id) values (:_id0, :_billing_profile_id0)",
    "Values": [
      [[1]],
      [[null]]
    ],
    "Table": "advertisers",
    "Prefix": "insert into advertisers(id, billing_profile_id) values ",
    "Mid": [
      "(:_id0, :_billing_profile_id0)"
    ]
  }
}

# Update to populate billing profile ID, which has a scatter-cache vindex column
"update advertisers set billing_profile_id = 5 where id = 6"
{
  "Original": "update advertisers set billing_profile_id = 5 where id = 6",
  "Instructions": {
    "Opcode": "UpdateEqual",
    "Keyspace": {
      "Name": "user",
      "Sharded": true
    },
    "Query": "update advertisers set billing_profile_id = 5 where id = 6",
    "Vindex": "advertiser_idx",
    "Values": [
      6
    ],
    "Table": "advertisers"
  }
}
